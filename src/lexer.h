// lexer.h
typedef enum {
    TOKEN_EOF, TOKEN_REG, TOKEN_FUNC, TOKEN_INT, TOKEN_BYTE, TOKEN_PTR,
    TOKEN_IF, TOKEN_ELSE, TOKEN_WHILE, TOKEN_FOR, TOKEN_RETURN, TOKEN_IDENT,
    TOKEN_NUMBER, TOKEN_STRING, TOKEN_ASM, TOKEN_LBRACE, TOKEN_RBRACE,
    TOKEN_LPAREN, TOKEN_RPAREN, TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_EQ,
    TOKEN_PLUS, TOKEN_MINUS, TOKEN_STAR, TOKEN_SLASH, TOKEN_AND, TOKEN_AT
} TokenType;

typedef struct {
    TokenType type;
    char* value;
} Token;

Token* tokenize(const char* input);